{
	"name": "Dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MeriJson",
						"type": "DatasetReference"
					},
					"name": "MeriMeasurements"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "ExtractFeatures"
				},
				{
					"name": "FlattenFeatures"
				},
				{
					"name": "ExtractFields"
				},
				{
					"name": "RemoveFeatures"
				}
			],
			"scriptLines": [
				"source(output(",
				"          body as (dataUpdatedTime as string, features as (geometry as (coordinates as double[], type as string), properties as (confidence as string, heelAngle as double, lastUpdate as timestamp, lightStatus as string, seaState as string, siteName as string, siteNumber as integer, siteType as string, temperature as short, trend as string, windWaveDir as short), siteNumber as integer, type as string)[], type as string),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> MeriMeasurements",
				"MeriMeasurements derive(features = body.features) ~> ExtractFeatures",
				"ExtractFeatures foldDown(unroll(features),",
				"     mapColumn(",
				"          features",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> FlattenFeatures",
				"FlattenFeatures derive(siteNumber = [\"siteNumber\"],",
				"          temperature = [\"temperature\"],",
				"          longitude = [\"coordinates\"][0],",
				"          latitude = [\"coordinates\"][1]) ~> ExtractFields",
				"ExtractFields select(mapColumn(",
				"          siteNumber,",
				"          temperature,",
				"          longitude,",
				"          latitude",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveFeatures",
				"RemoveFeatures sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}